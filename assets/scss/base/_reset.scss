/**=====================
    1.1 Reset CSS start
==========================**/

@use "sass:color";
.card-gap {
  column-gap: calc(15px + (24 - 15) * ((100vw - 320px) / (1920 - 320)));
}
.f-light {
  color: rgba($theme-body-sub-title-color, 0.8);
}

.c-light {
  color: $badge-light-color;
}

.c-o-light {
  color: $badge-light-color;
  opacity: 0.8;
  display: flex;
}

.light-white {
  color: $white;
}

.pull-right {
  float: right;
}
.grid {
  &::after {
    display: none !important;
  }
}
svg {
  &.f-light {
    fill: $theme-body-sub-title-color;
    opacity: 0.8;
  }
}

.w-600 {
  width: 600px;
}

.light-card {
  background-color: var(--light-background);
}

.light-background {
  background-color: var(--light-bg);
}

.icon-arrow-down,
.icon-arrow-up {
  &.icon-rotate {
    transform: rotate(-45deg);
    display: inline-block;
  }
}

[contenteditable] {
  outline: 0 solid transparent;
}

::selection {
  background-color: $primary-color;
  color: $white;
}

::-moz-selection {
  background-color: $primary-color;
  color: $white;
}

/*====== Padding css starts ======*/
$i: 0;

@while $i<=50 {
  .p-#{$i} {
    padding: #{$i}px;
  }

  $i: $i + 5;
}

/*====== Padding css ends ======*/

/*====== Padding-left css starts ======*/
$i: 0;

@while $i<=50 {
  .p-l-#{$i} {
    padding-left: #{$i}px;
  }

  $i: $i + 5;
}

/*====== Padding-left css ends ======*/

/*====== Padding-top css starts ======*/
$i: 0;

@while $i<=50 {
  .p-t-#{$i} {
    padding-top: #{$i}px !important;
  }

  $i: $i + 5;
}

/*====== Padding-top css ends ======*/

/*====== Padding-bottom css starts ======*/
$i: 0;

@while $i<=50 {
  .p-b-#{$i} {
    padding-bottom: #{$i}px !important;
  }

  $i: $i + 5;
}

/*====== Padding-bottom css ends ======*/

/*====== Padding-right css starts ======*/
$i: 0;

@while $i<=50 {
  .p-r-#{$i} {
    padding-right: #{$i}px;
  }

  $i: $i + 5;
}

/*====== Padding-right css ends ======*/

/*====== Margin css starts ======*/
$i: 0;

@while $i<=50 {
  .m-#{$i} {
    margin: #{$i}px !important;
  }

  $i: $i + 5;
}

/*====== Margin css ends ======*/

/*====== Margin-top css starts ======*/
$i: 0;

@while $i<=50 {
  .m-t-#{$i} {
    margin-top: #{$i}px !important;
  }

  $i: $i + 5;
}

/*====== Margin-top css ends ======*/

/*====== Margin-Bottom css starts ======*/
$i: 0;

@while $i<=50 {
  .m-b-#{$i} {
    margin-bottom: #{$i}px !important;
  }

  $i: $i + 5;
}

/*====== Margin-Bottom css ends ======*/

/*====== Margin-left css starts ======*/
$i: 0;

@while $i<=50 {
  .m-l-#{$i} {
    margin-left: #{$i}px !important;
  }

  $i: $i + 5;
}

/*====== Margin-left css ends ======*/

/*====== Margin-right css starts ======*/
$i: 0;

@while $i<=50 {
  .m-r-#{$i} {
    margin-right: #{$i}px;
  }

  $i: $i + 5;
}

/*====== Margin-right css ends ======*/

/*====== Border-radius css starts ======*/
$i: 0;

@while $i<=35 {
  .b-r-#{$i} {
    border-radius: #{$i}px !important;
  }

  $i: $i + 1;
}

/*====== Border-radius css ends ======*/

/*====== Font-size css starts ======*/
$i: 12;

@while $i<=100 {
  .f-#{$i} {
    font-size: #{$i}px !important;
  }

  $i: $i + 2;
}

/*====== Font-size css ends ======*/

/*====== Font-weight css starts ======*/
$i: 100, 300, 500, 400, 600, 700, 900;

@each $val in $i {
  .f-w-#{$val} {
    font-weight: $val;
  }
}

/*====== Font-weight css ends ======*/

/*====== Font-style css starts ======*/
$i: normal, italic, oblique, initial, inherit;

@each $val in $i {
  .f-s-#{$val} {
    font-style: $val;
  }
}

/*====== Font-style css ends ======*/

/*====== Text-Decoration css starts ======*/

$i: overline, line-through, underline, dashed, blink, dotted, initial, none,
  solid, wavy, inherit, double;

@each $val in $i {
  .text-#{$val} {
    text-decoration: $val;
  }
}

/*====== Text-Decoration css ends ======*/

/*====== Border-style css starts ======*/

$i: overline, dashed, dotted, solid, double, groove, ridge, inset, outset, none,
  hidden;

@each $val in $i {
  .border-s-#{$val} {
    border-style: $val;
  }
}

/*====== Border-style css ends ======*/

/*====== Vertical-Align css starts ======*/
$i: baseline, sub, super, top, text-top, middle, bottom, text-bottom, initial,
  inherit;

@each $val in $i {
  .#{$val} {
    vertical-align: $val;
  }
}

/*====== Vertical-Align css ends ======*/

/*====== Position css starts ======*/

$i: static, absolute, fixed, relative, initial, inherit;

@each $val in $i {
  .p-#{$val} {
    position: $val;
  }
}

/*====== Position css ends ======*/

/*====== Float css starts ======*/
$i: left, right, none;

@each $val in $i {
  .f-#{$val} {
    float: $val;
  }
}

/*====== Float css ends ======*/

/*====== Overflow css starts ======*/
$i: hidden, visible, auto;

@each $val in $i {
  .o-#{$val} {
    overflow: $val;
  }
}

/*====== Overflow css ends ======*/

/*====== Image-sizes css starts ======*/
$i: 10;

@while $i<=100 {
  .img-#{$i} {
    width: #{$i}px !important;
  }

  .img-h-#{$i} {
    height: #{$i}px !important;
  }

  $i: $i + 10;
}

/*====== Image-sizes css ends ======*/
/*====== Height-sizes css starts ======*/
$i: 2;

@while $i<=100 {
  .placeholder-h-#{$i} {
    height: #{$i}px !important;
  }

  $i: $i + 2;
}

/*====== Height-sizes css ends ======*/

/*======= Text css starts ===========*/
$text-name: primary, secondary, success, danger, info, light, dark, warning;
$text-color: $primary-color, $secondary-color, $success-color, $danger-color,
  $info-color, $light-color, $dark-color, $warning-color;

@each $var in $text-name {
  $i: index($text-name, $var);

  .font-#{$var} {
    color: nth($text-color, $i) !important;
  }
}

.font-primary {
  color: var(--theme-default) !important;
}

.font-secondary {
  color: var(--theme-secondary) !important;
}

/*======= Text css ends ===========*/

/*======= Label-color css starts  ======= */

.label {
  border-radius: 2px;
  color: $white;
  font-size: 12px;
  line-height: 1;
  margin-bottom: 0;
  text-transform: capitalize;
}

$label-name: theme, primary, secondary, success, danger, info, light, dark,
  warning;
$label-color: $primary-color, $primary-color, $secondary-color, $success-color,
  $danger-color, $info-color, $light-color, $dark-color, $warning-color;

@each $var in $label-name {
  $i: index($label-name, $var);

  .label-#{$var} {
    background-color: nth($label-color, $i);
  }
}

/*======= Label-color css ends  ======= */

/*======= Badge-color css starts  ======= */

$badge-name: primary, secondary, success, danger, info, light, dark, warning;
$badge-color: $primary-color, $secondary-color, $success-color, $danger-color,
  $info-color, $light-color, $dark-color, $warning-color;

@each $var in $badge-name {
  $i: index($badge-name, $var);

  .badge-#{$var} {
    background-color: nth($badge-color, $i);

    @if ($badge-name== "light") {
      color: $theme-body-font-color !important;
    }
  }

  .badge-b-#{$var} {
    border: 1px solid nth($badge-color, $i);
  }
}

.badge-primary {
  background-color: var(--theme-default) !important;
}

.badge-secondary {
  background-color: var(--theme-secondary) !important;
}

/*======= Badge-color css end  ======= */

/*======= Background-color css starts  ======= */

$background-name: primary, secondary, success, danger, info, light, dark,
  warning;
$background-color: $primary-color, $secondary-color, $success-color,
  $danger-color, $info-color, $light-color, $dark-color, $warning-color;

@each $var in $background-name {
  $i: index($background-name, $var);

  .bg-#{$var} {
    background-color: nth($background-color, $i) !important;
    color: $white;

    &:hover {
      background-color: nth($background-color, $i);
      color: $white;
    }
  }

  .table-#{$var} {
    td {
      background-color: rgba(nth($background-color, $i), 0.4) !important;
    }
  }

  // Projects
  .title-line-#{$var} {
    &::before {
      background-color: nth($background-color, $i) !important;
    }
  }

  .scope-light-#{$var} {
    background-color: rgba(nth($background-color, $i), 0.15) !important;
  }

  // common 10% background color

  .outline-10-#{$var} {
    outline: 2px solid rgba(nth($background-color, $i), 0.1);
  }

  .bg-7-#{$var} {
    background-color: rgba(nth($background-color, $i), 0.07) !important;
  }

  .bg-10-#{$var} {
    background-color: rgba(nth($background-color, $i), 0.1);
  }

  .bg-20-#{$var} {
    background-color: rgba(nth($background-color, $i), 0.2);
  }

  .outline-20-#{$var} {
    outline: 2px solid rgba(nth($background-color, $i), 0.2);
  }

  // Box-shadow
  .shadow-10-#{$var} {
    box-shadow: 0px
      5.04px
      14.96px
      0px
      rgba(nth($background-color, $i), 0.25)
      inset;
  }

  // Social dashboard
  .social-tabs {
    .tab-links {
      .social-box {
        &.bg-7-#{$var} {
          &.active {
            border: 1px solid nth($background-color, $i);
            transition: all 0.4s ease;
            font-weight: 400;
          }
        }
      }
    }
  }

  // Size : 8px Dot
  .dotted-#{$var} {
    background-color: nth($background-color, $i);
  }

  //  Badge bootstrap class
  .text-bg-#{$var} {
    background-color: nth($background-color, $i) !important;
  }

  // divider
  .divider-body {
    &.divider-#{$var} {
      &::before,
      &::after {
        border-color: nth($background-color, $i) !important;
      }
    }
  }

  .border-dashed-#{$var} {
    border: 1px dashed nth($background-color, $i);
    color: nth($background-color, $i);

    &:hover,
    &:active {
      border: 1px dashed nth($background-color, $i) !important;
      background-color: nth($background-color, $i) !important;
      color: $white !important;
    }
  }

  .border-left-#{$var} {
    border-left: 4px solid nth($background-color, $i);

    [dir="rtl"] & {
      border-left: unset;
      border-right: 4px solid nth($background-color, $i);
    }
  }

  .link-underline-#{$var} {
    text-decoration: underline;
    text-decoration-color: nth($background-color, $i) !important;

    &:hover {
      color: var(--body-font-color);
    }
  }

  .link-#{$var} {
    text-decoration: underline;
    text-decoration-color: nth($background-color, $i) !important;
    color: nth($background-color, $i) !important;

    &:hover,
    &:focus,
    &:active {
      color: nth($background-color, $i) !important;
      text-decoration-color: nth($background-color, $i) !important;
    }
  }

  .bg-light-#{$var} {
    background-color: rgba(nth($background-color, $i), 0.1) !important;
    color: $white;
  }

  .bg-lighter-#{$var} {
    background-color: rgba(nth($background-color, $i), 0.6);
    color: $white;
  }

  .button-light-#{$var} {
    background-color: rgba(nth($background-color, $i), 0.1) !important;

    &:active {
      border-color: rgba(nth($background-color, $i), 0.1) !important;
    }
  }
}

.bg-primary {
  background-color: var(--theme-default) !important;
}

.bg-secondary {
  background-color: var(--theme-secondary) !important;
}

/*======= Background-color css end  ======= */

/*======= Font-color css starts  ======= */

$text-name: primary, secondary, success, danger, info, light, dark, warning,
  google-plus, twitter, linkedin, fb;
$label-color: $primary-color, $secondary-color, $success-color, $danger-color,
  $info-color, $light-color, $dark-color, $warning-color, $google-plus, $twitter,
  $linkedin, $fb;

@each $var in $text-name {
  $i: index($text-name, $var);

  .txt-#{$var} {
    color: nth($label-color, $i) !important;
  }
}

.txt-primary {
  color: var(--theme-default) !important;
}

.txt-secondary {
  color: var(--theme-secondary) !important;
}

/*======= Font-color css end  ======= */

/*======= Button-color css starts  ======= */
// btn--color//
@keyframes push {
  50% {
    transform: scale(0.95);
  }

  100% {
    transform: scale(1);
  }
}

@each $btn-name, $btn-color in (primary, $primary-color),
  (secondary, $secondary-color), (success, $success-color),
  (danger, $danger-color), (info, $info-color), (light, $light-color),
  (dark, $dark-color), (warning, $warning-color)
{
  .btn-#{$btn-name} {
    background-color: $btn-color !important;
    border-color: $btn-color !important;
    -webkit-tap-highlight-color: transparent;
    transform: translateZ(0);

    @if ($btn-name== "info") {
      color: $white;

      &:hover,
      &:focus,
      &:active,
      &.active {
        color: $white !important;
      }
    }

    @if ($btn-name== "warning") {
      color: $white;

      &:hover,
      &:focus,
      &:active,
      &.active,
      &.show {
        color: $white !important;
      }
    }

    &.disabled,
    &:disabled {
      background-color: $btn-color !important;
      border-color: $btn-color !important;
    }

    &:focus {
      box-shadow: 0 0.2rem adjust-color($btn-color, $lightness: 30%);
    }
  }
}

.btn-light {
  background-color: rgba($primary-color, 0.06) !important;
  border-color: rgba($primary-color, 0.06) !important;

  &:hover {
    background-color: rgba($primary-color, 0.1) !important;
    border-color: rgba($primary-color, 0.1) !important;
  }
}

.btn-primary {
  background-color: var(--theme-default) !important;
  border-color: var(--theme-default) !important;
}

.btn-secondary {
  background-color: var(--theme-secondary) !important;
  border-color: var(--theme-secondary) !important;
}

.btn-hover-effect {
  &:hover {
    animation: push 0.5s linear 1;
  }
}

/*======= Button-color css ends  ======= */
@each $btn-name, $btn-color in (primary, $primary-color),
  (secondary, $secondary-color), (success, $success-color),
  (danger, $danger-color), (info, $info-color), (light, $light-color),
  (dark, $dark-color), (warning, $warning-color)
{
  .btn-outline-#{$btn-name}-2x {
    border-width: 2px;
    border-color: $btn-color;
    color: $btn-color;
    background-color: transparent;

    &:hover,
    &:focus,
    &:active,
    &.active {
      color: $white !important;
      background-color: rgba($btn-color, 1) !important;
      border-color: rgba($btn-color, 1) !important;
      box-shadow: none;
    }

    & {
      @if ($btn-name== "light") {
        color: $theme-body-font-color;

        &:hover,
        &:focus,
        &:active,
        &.active {
          color: $theme-body-font-color !important;
        }
      }
    }
  }
}

// outline buttons//
@each $btn-name, $btn-color in (primary, $primary-color),
  (secondary, $secondary-color), (success, $success-color),
  (danger, $danger-color), (info, $info-color), (light, $light-color),
  (dark, $dark-color), (warning, $warning-color)
{
  .btn-outline-#{$btn-name} {
    border-color: $btn-color;
    color: $btn-color;
    background-color: transparent;

    @if ($btn-name== "light") {
      color: $theme-body-font-color;
    }

    &.disabled {
      color: $btn-color;
      border-color: $btn-color;
    }

    &:hover,
    &:active {
      border-color: $btn-color !important;
      color: $white;
      background-color: $btn-color !important;
    }
  }

  .btn-check {
    color: $btn-color !important;

    &:checked {
      color: white !important;
      background-color: $btn-color !important;

      + {
        .btn-outline-#{$btn-name} {
          color: white !important;
          background-color: $btn-color !important;
          box-shadow: unset !important;
        }
      }
    }

    + {
      .btn-outline-#{$btn-name} {
        border-color: $btn-color !important;
        color: $btn-color !important;
        background-color: transparent;

        @if ($btn-name== "light") {
          color: $theme-body-font-color;
        }

        &.disabled {
          color: $btn-color;
        }

        &:hover,
        &:focus,
        &:active,
        &:focus-visible,
        &.active {
          color: $white !important;
          background-color: $btn-color !important;
          border-color: $btn-color !important;
          box-shadow: none !important;
        }
      }
    }
  }
}

//active button css //

@each $btn-name, $btn-color in (primary, $primary-color),
  (secondary, $secondary-color), (success, $success-color),
  (danger, $danger-color), (info, $info-color), (light, $light-color),
  (dark, $dark-color), (warning, $warning-color)
{
  .btn-#{$btn-name}:not([disabled]):not(.disabled).active {
    background-color: color.adjust($btn-color, $lightness: -10%);
    border-color: color.adjust($btn-color, $lightness: -10%);
    box-shadow: none !important;

    &:hover,
    &:focus,
    &:active,
    &.active {
      color: white;
      background-color: color.adjust($btn-color, $lightness: -10%);
      border-color: color.adjust($btn-color, $lightness: -10%);
    }
  }
}

//* active button css end *//

@each $btn-name, $btn-color in (primary, $primary-color),
  (secondary, $secondary-color), (success, $success-color),
  (danger, $danger-color), (info, $info-color), (light, $light-color),
  (dark, $dark-color), (warning, $warning-color)
{
  .btn-outline-#{$btn-name}-2x:not([disabled]):not(.disabled).active {
    background-color: $btn-color;
    border-color: $btn-color;
    box-shadow: none !important;
    color: white;

    &:hover,
    &:focus,
    &:active,
    &.active {
      color: white;
      box-shadow: none !important;
      background-color: color.adjust($btn-color, $lightness: -10%) !important;
      border-color: color.adjust($btn-color, $lightness: -10%) !important;
    }
  }
}

/*======= Table-Border-Bottom-color css starts  ======= */

$border-name: primary, secondary, success, danger, info, light, dark, warning;
$border-color: $primary-color, $secondary-color, $success-color, $danger-color,
  $info-color, $light-color, $dark-color, $warning-color;

@each $var in $border-name {
  $i: index($border-name, $var);

  table thead .border-bottom-#{$var} th,
  table tbody .border-bottom-#{$var} th,
  table tbody .border-bottom-#{$var} td {
    border-bottom: 1px solid nth($border-color, $i) !important;
  }
}

/*======= Table-Border-Bottom-color css ends  ======= */

/*======= Table styling css starts  ======= */

$table-name: primary, secondary, success, danger, info, light, dark, warning;
$table-color: $primary-color, $secondary-color, $success-color, $danger-color,
  $info-color, $light-color, $dark-color, $warning-color;

@each $var in $table-name {
  $i: index($table-name, $var);

  .table-styling .table-#{$var},
  .table-styling.table-#{$var} {
    background-color: nth($border-color, $i);
    color: $white;
    border: 3px solid nth($border-color, $i);

    thead {
      background-color: color.adjust(nth($border-color, $i), $lightness: -10%);
      border: 3px solid color.adjust(nth($border-color, $i), $lightness: -10%);
    }

    th,
    td {
      background-color: transparent;
    }
  }
}

/*======= Table styling css ends  ======= */

/*======= Svg stroke css start  ======= */
$stroke-name: primary, secondary, success, danger, info, light, dark, warning;
$stroke-color: $primary-color, $secondary-color, $success-color, $danger-color,
  $info-color, $light-color, $dark-color, $warning-color;

@each $var in $stroke-name {
  $i: index($stroke-name, $var);

  .stroke-#{$var} {
    stroke: nth($stroke-color, $i) !important;
  }
}

/*======= Svg stroke css end  ======= */

/*======= Checkbox color css start  ======= */
$checkbox-name: primary, secondary, success, danger, info, light, dark, warning;
$checkbox-color: $primary-color, $secondary-color, $success-color, $danger-color,
  $info-color, $light-color, $dark-color, $warning-color;

@each $var in $checkbox-name {
  $i: index($stroke-name, $var);

  .checkbox-#{$var} {
    &.form-check-input {
      &:checked {
        background-color: nth($checkbox-color, $i) !important;
        border-color: nth($checkbox-color, $i) !important;
      }
    }
  }
}

/*======= Checkbox color css end  ======= */

/*======= All-Borders-color css starts  ======= */

$b-name: primary, secondary, success, danger, info, light, dark, warning;
$b-color: $primary-color, $secondary-color, $success-color, $danger-color,
  $info-color, $light-color, $dark-color, $warning-color;

@each $var in $b-name {
  $i: index($b-name, $var);

  .b-#{$var} {
    border: 1px solid nth($b-color, $i) !important;
  }

  .b-t-#{$var} {
    border-top: 1px solid nth($b-color, $i) !important;
  }

  .border-t-#{$var} {
    border-top: 1px solid nth($b-color, $i) !important;
  }

  .b-b-#{$var} {
    border-bottom: 1px solid nth($b-color, $i) !important;
  }

  .border-b-#{$var} {
    border-bottom: 1px solid nth($b-color, $i) !important;
  }

  .b-l-#{$var} {
    border-left: 1px solid nth($b-color, $i) !important;
  }

  .border-l-#{$var} {
    border-left: 1px solid nth($b-color, $i) !important;
  }

  .b-r-#{$var} {
    border-right: 1px solid nth($b-color, $i) !important;
  }

  .border-r-#{$var} {
    border-right: 1px solid nth($b-color, $i) !important;
  }
}

/*======= All-Borders-color css ends  ======= */

/*====== Border width css starts ======*/
$i: 1;

@while $i<=10 {
  .border-#{$i} {
    border-width: #{$i}px !important;
  }

  $i: $i + 1;
}

/*====== Border width css ends ======*/

/*====== Border dashed css starts ======*/
$i: 1;

@while $i<=10 {
  .b-width-#{$i} {
    border-width: #{$i}px !important;
  }

  $i: $i + 1;
}

/*====== Border dashed css ends ======*/

.map-js-height {
  height: 500px;
}

/**====== custom scrollbar css start ======**/
.custom-scrollbar,
.dropdown-menu {
  &::-webkit-scrollbar-track {
    -webkit-box-shadow: inset 0 0 6px $light-gray;
  }

  &::-webkit-scrollbar {
    width: 6px;
    height: 8px;
  }

  &::-webkit-scrollbar-thumb {
    background-color: rgba(68, 102, 242, 0.15);
  }
}

.customer-table,
.recent-order-scroll,
.recent-items,
.recent-table,
.lead-table,
.deal-table,
.referral-visit,
.leave-request-table,
.chats-user,
.contact-wrapper,
.fc-scroller-liquid-absolute,
.fc-scroller-liquid,
.tagify__dropdown__wrapper,
.iti__country-list,
.tt-dataset-countries,
.dt-scroll-body,
.jsgrid-grid-header,
.jsgrid-grid-body,
.select2-results__options,
.ace_scrollbar,
.anchor,
.ql-editor .inner.show,
.form-control[data-multiselectsplitter-firstselect-selector],
.form-control[data-multiselectsplitter-secondselect-selector],
.bootstrap-select .inner.show,
.permission-form ul,
.main-setting .nav-primary {
  &::-webkit-scrollbar-track {
    -webkit-box-shadow: inset 0 0 6px $light-gray;
  }

  &::-webkit-scrollbar {
    width: 6px;
    height: 5px;
  }

  &::-webkit-scrollbar-thumb {
    background-color: rgba(68, 102, 242, 0.15);
  }
}

/**====== Animation css Start ======**/

.line {
  color: $dark-color;

  pre {
    font-size: 100%;
  }
}

/**====== Animation css end ======**/

/**====== Modal style css Start ======**/
.theme-close {
  opacity: 1;
  position: absolute;
  z-index: 1;
  right: 0;
  background-color: $white !important;
}

/**====== Modal style css end ======**/

/**====== Animation css start ======**/
.options {
  display: flex;
  flex-wrap: wrap;
  gap: 10px;

  > div {
    color: $gray-60;
    padding: 2px 10px;
    border: 1px solid;

    &:hover {
      background-color: $primary-color;
      color: $white;
      transition: background-color 0.3s ease;
    }
  }
}

/**====== Animation css Ends ======**/

.modal-footer {
  flex-wrap: wrap;
}

.img-cropper {
  .img-container {
    min-height: auto;
    margin-bottom: 0;
  }

  .docs-data {
    .input-group {
      display: flex;
      flex-wrap: nowrap;
      gap: 4px;
    }
    > .input-group {
      &:last-child {
        margin-bottom: 0;
      }
    }
  }

  .docs-preview {
    margin-top: 20px;
    margin-bottom: 10px;
  }
}

.dropzone {
  .dz-preview {
    .dz-error-message {
      background: $white !important;
      color: $primary-color !important;
      border: 1px solid $primary-color;

      &:after {
        border-bottom: 6px solid $primary-color !important;
      }
    }
  }
}

.typeahead {
  .theme-form {
    .form-group {
      margin-bottom: 0;
    }
  }
}

.primary {
  .svg-fill {
    fill: var(--theme-default);

    &:not(.half-circle) {
      stroke: var(--theme-default);
    }
  }

  .bg-gradient {
    background-image: linear-gradient(
      144.16deg,
      rgba($primary-color, 0.1) 19.06%,
      rgba($primary-color, 0) 79.03%
    ) !important;
  }
}

.secondary {
  .svg-fill {
    fill: var(--theme-secondary);

    &:not(.half-circle) {
      stroke: var(--theme-secondary);
    }
  }

  .bg-gradient {
    background-image: linear-gradient(
      144.16deg,
      rgba($secondary-color, 0.1) 19.06%,
      rgba($secondary-color, 0) 79.03%
    ) !important;
  }
}

.success {
  .svg-fill {
    fill: $success-color;
  }

  .bg-gradient {
    background-image: linear-gradient(
      144.16deg,
      rgba($success-color, 0.1) 19.06%,
      rgba($success-color, 0) 79.03%
    ) !important;
  }
}

.warning {
  .svg-fill {
    fill: $warning-color;
  }

  .bg-gradient {
    background-image: linear-gradient(
      144.16deg,
      rgba($warning-color, 0.1) 19.06%,
      rgba($warning-color, 0) 79.03%
    ) !important;
  }
}

.dotted {
  border-style: dotted;
}

.dashed {
  border-style: dashed;
}

.double {
  border-style: double;
}

.groove {
  border-style: groove;
}

.ridge {
  border-style: ridge;
}

.inset {
  border-style: inset;
}

.outset {
  border-style: outset;
}

@keyframes fadeIncustom {
  0% {
    opacity: 0;
    top: 50px;
  }

  75% {
    opacity: 0.6;
    top: 0;
  }

  100% {
    opacity: 1;
  }
}

.code-box-copy {
  width: 100%;
  overflow: auto;

  pre[class*="language-"] {
    height: 300px;
  }
}

@media (max-width: 1660px) and (min-width: 1400px) {
  .custom-rs-4 {
    grid-column: span 4 / span 4 !important;
  }

  .custom-rs-12 {
    grid-column: span 12 / span 12 !important;
  }
}

// dashboard-7
.apexcharts-canvas {
  .apexcharts-tooltip {
    .apexcharts-tooltip-marker {
      width: 10px;
      height: 10px;
    }

    .apexcharts-tooltip-goals-group,
    .apexcharts-tooltip-z-group {
      display: none;
    }
  }
}

// dashboard-8
.bg-gray {
  background-color: var(--chart-text-color);
}

.text-gray {
  color: var(--chart-text-color) !important;
}

// common css
.common-space {
  @include pixelstrap-flex(flex, space-between, center);
}

.common-f-start {
  @include pixelstrap-flex(flex, flex-start, center);
}

/* Override the default tooltip arrow color */
.bs-tooltip-top .tooltip-arrow::before,
.bs-tooltip-auto[data-popper-placement^="top"] .tooltip-arrow::before {
  border-top-color: $light-primary;
}

.bs-tooltip-end .tooltip-arrow::before,
.bs-tooltip-auto[data-popper-placement^="right"] .tooltip-arrow::before {
  border-right-color: $light-primary;
}

.bs-tooltip-bottom .tooltip-arrow::before,
.bs-tooltip-auto[data-popper-placement^="bottom"] .tooltip-arrow::before {
  border-bottom-color: $light-primary;
}

.bs-tooltip-start .tooltip-arrow::before,
.bs-tooltip-auto[data-popper-placement^="left"] .tooltip-arrow::before {
  border-left-color: $light-primary;
}

.common-title {
  background-color: var(--white);
  padding: 18px;
  border-radius: 10px;
}
.display-1 {
  font-size: 80px;
}

.display-2 {
  font-size: 72px;
}

.display-3 {
  font-size: 64px;
}

.display-4 {
  font-size: 56px;
}

.display-5 {
  font-size: 48px;
}

.display-6 {
  font-size: 40px;
}
.blockquote-footer {
  margin-top: -1rem;
  font-size: 18px;
  color: #6c757d;
  &::before {
    content: "— ";
  }
}
.placeholder {
  display: inline-block;
  vertical-align: middle;
  cursor: wait;
  background-color: currentcolor;
  opacity: 0.5;
}
.placeholder-light {
  background-color: #3f475a;
  opacity: 0.08;
}
.placeholder-glow {
  .placeholder {
    animation: placeholder-glow 2s ease-in-out infinite;
  }
}
@keyframes placeholder-glo {
  50% {
    opacity: 0.1;
  }
}
.custom-checkbox {
  appearance: none;
  cursor: pointer;
  height: 14px;
  width: 14px;
  border-radius: 4px;
  display: inline-block;
  position: relative;
  border: 1px solid $gray-60;
  background-color: transparent;
  transition: all 0.3s ease-in-out;
  &::before {
    content: "\f00c";
    font-family: FontAwesome !important;
    position: absolute;
    top: 50%;
    left: 50%;
    font-size: 8px;
    color: $primary-color;
    transform: translate(-50%, -50%) scale(0);
    transition: all 0.3s ease-in-out;
  }
  &:checked {
    background-color: $primary-color;
    &::before {
      transform: translate(-50%, -50%) scale(1);
      color: $white;
    }
  }
}
.custom-radio {
  appearance: none;
  cursor: pointer;
  height: 15px;
  width: 15px;
  border-radius: 50%;
  display: inline-block;
  background-color: transparent;
  transition: all 0.3s ease-in-out;
  border: 1px solid $gray-60 !important;
  margin-left: 3px;
  outline-offset: 2px;
  position: relative;
  &::after {
    content: "";
    position: absolute;
    top: 46%;
    left: 50%;
    transform: translate(-50%, -50%) scale(0);
    background-color: $white;
    border-radius: 50%;
    width: 6px;
    height: 6px;
    transition: all 0.3s ease-in-out;
    z-index: 1;
  }
  &:checked {
    background-color: $primary-color;
    outline: 1px solid $primary-color;
    &::after {
      transform: translate(-50%, -50%) scale(1);
    }
  }
  &:focus {
    border: none;
  }
}
.list-group {
  display: flex;
  flex-direction: column;
  padding-left: 0;
  margin-bottom: 0;
  border-radius: 6px;
  .list-group-item {
    padding: 11px 16px;
    border-width: 1px;
    position: relative;
    display: block;
    color: #212529;
  }
}
img {
  display: unset;
}
.btn-close {
  --tw-btn-close-color: $black;
  --tw-btn-close-bg: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16' fill='%23000'%3e%3cpath d='M.293.293a1 1 0 0 1 1.414 0L8 6.586 14.293.293a1 1 0 1 1 1.414 1.414L9.414 8l6.293 6.293a1 1 0 0 1-1.414 1.414L8 9.414l-6.293 6.293a1 1 0 0 1-1.414-1.414L6.586 8 .293 1.707a1 1 0 0 1 0-1.414z'/%3e%3c/svg%3e");
  --tw-btn-close-opacity: 0.5;
  --tw-btn-close-hover-opacity: 0.75;
  --tw-btn-close-focus-shadow: 0 0 0 0.25rem rgba(13, 110, 253, 0.25);
  --tw-btn-close-focus-opacity: 1;
  --tw-btn-close-disabled-opacity: 0.25;
  --tw-btn-close-white-filter: invert(1) grayscale(100%) brightness(200%);
  box-sizing: content-box;
  width: 14px;
  height: 14px;
  padding: 4px 4px;
  color: $black;
  background: transparent var(--tw-btn-close-bg) center/14px auto no-repeat;
  border: 0;
  border-radius: 6px;
  opacity: var(--tw-btn-close-opacity);
}
.list-group-numbered > .list-group-item::before {
  content: counters(section, ".") ". ";
  counter-increment: section;
}
.list-group-numbered {
  counter-reset: section;
}
.col-form-label {
  padding-top: calc(0.375rem + 1px);
  line-height: 1.5;
  display: inline-block;
  margin-bottom: 0;
}
.modal {
  display: none;
  opacity: 0;
  transition: opacity 0.3s ease;
  position: fixed;
  top: 0;
  left: 0;
  z-index: 1055;
  display: none;
  width: 100%;
  height: 100%;
  overflow-x: hidden;
  overflow-y: auto;
  outline: 0;
  background-color: rgba($black, 0.5);
  .modal-dialog {
    position: relative;
    width: 500px;
    margin: 28px auto;
    @media (max-width: 767px) {
      width: auto;
      margin: 28px 15px;
    }
    .modal-content {
      background-color: $white;
      border-radius: 6px;
      display: flex;
      flex-direction: column;
      width: 100%;
      .modal-header {
        padding: 16px;
        border-bottom: 1px solid rgba($black, 0.1);
        display: flex;
        flex-wrap: wrap;
        align-items: center;
        justify-content: space-between;
        .btn-close {
          cursor: pointer;
        }
      }
      .modal-body {
        padding: 12px;
      }
      .modal-footer {
        padding: 12px;
        border-top: 1px solid rgba($black, 0.1);
        display: flex;
        flex-wrap: wrap;
        align-items: center;
        justify-content: flex-end;
      }
    }
  }
  .modal-fullscreen {
    width: 100vw;
    max-width: none;
    height: 100%;
    margin: 0;
  }
  .modal-xl {
    @media (min-width: 1200px) {
      width: 1140px !important;
    }
    @media (min-width: 992px) {
      width: 800px;
    }
  }
  .modal-lg {
    @media (min-width: 992px) {
      width: 800px;
    }
  }
  .modal-sm {
    @media (min-width: 576px) {
      width: 300px;
    }
  }
  &.show {
    display: block;
    opacity: 1;
  }
}
.modal-dialog-centered {
  display: flex;
  align-items: center;
  min-height: calc(100% - 1.75rem * 2);
  .modal-content {
    width: 100%;
  }
}
hr {
  margin: 14px 0;
}
.faq-wrap {
  .collapse {
    visibility: visible !important;
  }
}
.collapse:not(.show) {
  display: none;
}
.dt-buttons {
  display: flex;
  .dt-button {
    padding: 6px calc(9px + 8 * (100vw - 320px) / 1600) !important;
    color: $primary-color;
    border: 1px solid rgba($primary-color, 1);
    transition: all 0.4s ease-in-out;
    @media (max-width: 700px) {
      padding: 6px 6px !important;
    }
    &:hover {
      background-color: rgba($primary-color, 1);
      color: rgba($white, 1);
    }
    + .dt-button {
      border-left: none;
    }
    &:first-child {
      border-radius: 6px 0 0 6px;
    }
    &:last-child {
      border-radius: 0 6px 6px 0;
    }
  }
}
.dt-layout-row {
  .dt-layout-cell {
    table {
      tbody {
        .inbox-data {
          border-bottom: 1px solid rgba($black, 0.07);
        }
      }
    }
    &.dt-end {
      .dt-paging {
        .dt-paging-button {
          background-color: rgba($black, 0.05);
        }
      }
    }
  }
}
.img-thumbnail {
  padding: 0.25rem;
  background-color: rgba($white, 1);
  border: 1px solid rgba($black, 0.07);
  border-radius: 6px;
  max-width: 100%;
  height: auto;
}
.pagination {
  display: flex;
  .page-item {
    + .page-item {
      .page-link {
        border-left: none;
        &.rounded-full {
          border: 1px solid rgba($black, 0.1);
        }
      }
    }
    &:first-child {
      .page-link {
        border-radius: 6px 0 0 6px;
      }
    }
    &:last-child {
      .page-link {
        border-radius: 0 6px 6px 0;
      }
    }
  }
  .page-link {
    padding: 6px 12px;
    line-height: 1.5;
    border: 1px solid rgba($black, 0.1);
    display: block;
  }
}
.pagination-lg {
  .page-link {
    font-size: 20px !important;
  }
}
.pagination-md {
  .page-link {
    font-size: 16px !important;
  }
}
.form-select {
  background-color: $white;
}
table {
  &.dataTable {
    tbody {
      tr {
        border-bottom: 1px solid rgba($black, 0.08);
        &:last-child {
          border-bottom: none;
        }
      }
    }
  }
}
.support-ticket-table {
  .dt-container {
    .dt-layout-row {
      &:last-child {
        display: flex !important;
        justify-content: space-between !important;
        align-items: center;
        flex-wrap: wrap;
        margin-top: 8px;
        gap: 10px;
      }
      .dt-end {
        .dt-paging {
          display: flex;
          .dt-paging-button {
            padding: 6px 12px;
            line-height: 1.5;
            border: 1px solid rgba($black, 0.06);
            display: block;
            &:first-child {
              border-radius: 6px 0 0 6px;
            }
            &:last-child {
              border-radius: 0 6px 6px 0;
            }
            &.current {
              background-color: $primary-color;
              color: $white;
            }
          }
        }
      }
    }
  }
}
table.dataTable {
  input {
    height: unset !important;
  }
}
.tooltip {
  position: absolute;
  background-color: red;
  color: white;
  padding: 5px 10px;
  border-radius: 5px;
  font-size: 14px;
  white-space: nowrap;
  z-index: 1000;
  opacity: 0;
  transition: opacity 0.2s;
}
.valid-feedback,
.invalid-feedback {
  display: none;
  font-size: 0.9em;
  padding-top: 4px;
}
.form-select.is-invalid:not([multiple]):not([size]),
.form-select.is-invalid:not([multiple])[size="1"],
.was-validated .form-select:invalid:not([multiple]):not([size]) {
  background-image: url(../images/forms/invalid.svg);
  background-repeat: no-repeat;
  padding-right: 4.125rem;
  background-position: right 1.25rem center, center right 2.25rem;
  background-size: calc(0.75em + 0.375rem) calc(0.75em + 0.375rem);
}
.form-select.is-valid:not([multiple]):not([size]),
.form-select.is-valid:not([multiple])[size="1"],
.was-validated .form-select:valid:not([multiple]):not([size]),
.was-validated .form-select:valid:not([multiple])[size="1"] {
  background-image: url(../images/forms/valid.svg);
  background-repeat: no-repeat;
  padding-right: 4.125rem;
  background-position: right 1.25rem center, center right 2.25rem;
  background-size: calc(0.75em + 0.375rem) calc(0.75em + 0.375rem);
}
.form-control.is-invalid,
.was-validated .form-control:invalid {
  background-image: url(../images/forms/invalid.svg);
  background-repeat: no-repeat;
  padding-right: 4.125rem;
  background-position: right 1.25rem center, center right 2.25rem;
  background-size: calc(0.75em + 0.375rem) calc(0.75em + 0.375rem);
}
.form-control.is-valid,
.was-validated .form-control:valid {
  background-image: url(../images/forms/valid.svg);
  background-repeat: no-repeat;
  padding-right: 4.125rem;
  background-position: right 1.25rem center, center right 2.25rem;
  background-size: calc(0.75em + 0.375rem) calc(0.75em + 0.375rem);
}
.needs-validation.was-validated .form-control:invalid,
.needs-validation.was-validated .form-select:invalid {
  border-color: $danger-color !important;
  &:focus-visible {
    border-color: $danger-color !important;
  }
}
.container-invoice {
  @media (min-width: 1399px) {
    max-width: 1320px;
    margin: auto;
  }
}
.social-app-profile1 {
  .img-50 {
    height: 50px !important;
    width: 50px !important;
  }
}
.selectpicker {
  ~ .custom-dropdown {
    position: relative;
    display: inline-block;
    width: 100%;
    .dropdown-toggle {
      width: 100%;
      padding: 10px;
      border: 1px solid $gray-60;
      background: $white;
      cursor: pointer;
      text-align: left;
      border-radius: 4px;
      &::after {
        display: none;
      }
      &::before {
        content: "\f107";
        font-family: FontAwesome !important;
        float: right;
        font-size: 12px;
        margin-left: 15px;
      }
    }
    .dropdown-menu {
      position: absolute;
      width: 100%;
      background: $white;
      display: none;
      z-index: 2;
      border-radius: 4px;
      max-height: 300px;
      overflow-y: auto;
    }
    .dropdown-search {
      width: calc(100% - 20px);
      margin: 10px;
      padding: 12px 10px;
      border: 1px solid $gray-60;
      border-radius: 4px;
      border-radius: 6px;
    }
    .dropdown-list {
      list-style: none;
      padding: 0;
      margin: 0;
    }
    .dropdown-item {
      padding: 10px;
      cursor: pointer;
      transition: background 0.2s;
      &:hover {
        background: rgba($black, 0.06);
      }
    }
  }
}
.col-form-label:has(.selectpicker) {
  width: 100%;
}
figure {
  @media (max-width: 480px) {
    margin-bottom: 15px !important;
  }
}
.dashboard-8 {
  input {
    &::placeholder {
      color: rgba($theme-font-color, 0.8);
    }
  }
  .input-group {
    flex-wrap: nowrap !important;
    .input-group-text {
      border-radius: 6px 0 0 6px !important;
      border-right: none !important;
    }
    .form-control {
      border-radius: 0 6px 6px 0;
    }
  }
  .touchspin-wrapper {
    display: block !important;
    @media (max-width: 1700px) {
      display: flex !important;
    }
  }
}
.table > :not(caption) > * > * {
  border-bottom-width: 0 !important;
}
.list-inline-item:not(:last-child) {
  margin-right: 10px;
}
.img-cropper {
  .btn-group {
    .btn {
      &:first-child {
        border-top-right-radius: 0 !important;
        border-bottom-right-radius: 0 !important;
        border-top-left-radius: 8px !important;
        border-bottom-left-radius: 8px !important;
      }
      &:last-child {
        border-top-right-radius: 8px !important;
        border-bottom-right-radius: 8px !important;
        border-top-left-radius: 0 !important;
        border-bottom-left-radius: 0 !important;
      }
    }
  }
}
.introjs-helperLayer {
  background-color: transparent !important;
}
.animated-modal-page {
  .modal {
    display: none;
    opacity: 0;
  }
  .modal.show {
    display: block;
    opacity: 1;
  }
  .animated-modal {
    animation-duration: 0.8s;
  }
  .modal-popup.modal {
    top: 0 !important;
    left: 0 !important;
    transform: unset;
    background-color: transparent;
    .modal-dialog {
      height: 100%;
      display: flex;
      align-items: center;
      justify-content: center;
      margin: 0 auto !important;
    }
  }
  .animate__animated {
    animation-duration: 0.8s;
  }
}
.modal-backdrop {
  &.show {
    position: fixed;
    top: 0;
    left: 0;
    z-index: 1050;
    width: 100vw;
    height: 100vh;
    background-color: rgba($black, 0.5);
  }
}
.review-edit {
  tbody {
    tr {
      border: none !important;
    }
  }
}
.border-bottom-0 {
  border-bottom: 0 !important;
}
.my-gallery {
  &.gallery-with-description {
    img {
      border: none !important;
    }
    p {
      margin-bottom: 16px;
    }
  }
}
.gallery-with-description {
  .grid {
    margin-bottom: -30px;
  }
}
.main-scrollspy {
  .active {
    background-color: red;
  }
  /* Scroll Snapping */
  .scroll-container {
    scroll-snap-type: y mandatory;
    overflow-y: scroll;
    height: 100vh;
    scroll-behavior: smooth;
  }
  .scroll-section {
    scroll-snap-align: start;
    height: 100vh;
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 24px;
    font-weight: bold;
  }
}
/**=====================
    1.1 Reset CSS Ends
==========================**/
